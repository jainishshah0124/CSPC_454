{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{Line}from'react-chartjs-2';import'./chartSetup';// Ensure the components are registered once\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TideInfo=_ref=>{let{lat,lon}=_ref;const[tideData,setTideData]=useState([]);const[chartKey,setChartKey]=useState(0);// Key to force re-rendering\nuseEffect(()=>{const fetchTideData=async()=>{try{// const response = await axios.get('/tideData.json'); \n//const baseUrl = 'https://server-dot-turing-diode-439622-f5.wl.r.appspot.com';\nconst baseUrl='http://localhost:8080';const response=await axios.get(`${baseUrl}/api/get-data`);const beaches=response.data;beaches=beaches[0].tide_data;const beachData=beaches.find(beach=>beach.lat===parseFloat(lat));if(beachData&&beachData.data&&beachData.data.heights){setTideData(beachData.data.heights);setChartKey(prevKey=>prevKey+1);}else{console.warn('No data found for the provided latitude.');}}catch(error){console.error('Error fetching tide information:',error);}};fetchTideData();},[lat,lon]);const formatDataForGraph=()=>{const labels=tideData.map(data=>{const date=new Date(data.dt*1000);return date.toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'});});const heights=tideData.map(data=>data.height);return{labels,datasets:[{label:'Tide Height (ft)',data:heights,borderColor:'#4A90E2',backgroundColor:'rgba(74, 144, 226, 0.3)',fill:true,tension:0.4}]};};return/*#__PURE__*/_jsxs(\"div\",{className:\"tide-info bg-gradient-to-r from-blue-300 to-blue-300 p-6 rounded-lg shadow-lg\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-center text-lg\",children:\"Tide Information\"}),tideData.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-6\",children:/*#__PURE__*/_jsx(Line,{data:formatDataForGraph()},chartKey)})]});};export default TideInfo;","map":{"version":3,"names":["React","useState","useEffect","axios","Line","jsx","_jsx","jsxs","_jsxs","TideInfo","_ref","lat","lon","tideData","setTideData","chartKey","setChartKey","fetchTideData","baseUrl","response","get","beaches","data","tide_data","beachData","find","beach","parseFloat","heights","prevKey","console","warn","error","formatDataForGraph","labels","map","date","Date","dt","toLocaleTimeString","hour","minute","height","datasets","label","borderColor","backgroundColor","fill","tension","className","children","length"],"sources":["/Users/csuftitan/Desktop/Cloud Project/beach-info/src/TideInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport './chartSetup'; // Ensure the components are registered once\n\nconst TideInfo = ({ lat, lon }) => {\n  const [tideData, setTideData] = useState([]);\n  const [chartKey, setChartKey] = useState(0); // Key to force re-rendering\n\n  useEffect(() => {\n    const fetchTideData = async () => {\n      try {\n        // const response = await axios.get('/tideData.json'); \n        //const baseUrl = 'https://server-dot-turing-diode-439622-f5.wl.r.appspot.com';\n        const baseUrl = 'http://localhost:8080';\n        const response = await axios.get(`${baseUrl}/api/get-data`);\n        const beaches = response.data;\n        beaches=beaches[0].tide_data;\n        const beachData = beaches.find(beach => beach.lat === parseFloat(lat));\n        if (beachData && beachData.data && beachData.data.heights) {\n          setTideData(beachData.data.heights);\n          setChartKey((prevKey) => prevKey + 1);\n        } else {\n          console.warn('No data found for the provided latitude.');\n        }\n      } catch (error) {\n        console.error('Error fetching tide information:', error);\n      }\n    };\n\n    fetchTideData();\n  }, [lat, lon]);\n\n  const formatDataForGraph = () => {\n    const labels = tideData.map((data) => {\n      const date = new Date(data.dt * 1000);\n      return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    });\n\n    const heights = tideData.map((data) => data.height);\n\n    return {\n      labels,\n      datasets: [\n        {\n          label: 'Tide Height (ft)',\n          data: heights,\n          borderColor: '#4A90E2',\n          backgroundColor: 'rgba(74, 144, 226, 0.3)',\n          fill: true,\n          tension: 0.4,\n        },\n      ],\n    };\n  };\n\n  return (\n    <div className=\"tide-info bg-gradient-to-r from-blue-300 to-blue-300 p-6 rounded-lg shadow-lg\">\n       <p className=\"text-center text-lg\">Tide Information</p>\n\n      {tideData.length > 0 && (\n        <div className=\"mb-6\">\n          <Line key={chartKey} data={formatDataForGraph()} />\n        </div>\n      )}\n\n      \n    </div>\n  );\n};\n\nexport default TideInfo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}