{"ast":null,"code":"import React,{useState}from'react';import{GoogleMap,LoadScript}from'@react-google-maps/api';import{MarkerClusterer}from'@googlemaps/markerclusterer';import BeachWeather from'./BeachWeather';import BeachInformation from'./BeachInformation';import axios from'axios';import TideInfo from'./TideInfo';import BeachDescription from'./BeachDescription';import NearbyArticles from'./NearbyArticles';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";require('dotenv').config();const containerStyle={width:'100%',height:'600px'};const center={lat:34.0522,// Latitude for Los Angeles, California\nlng:-118.2437// Longitude for Los Angeles, California\n};const BeachInfo=()=>{const[showWeather,setShowWeather]=useState(false);const[beachData,setBeachData]=useState(null);const[beachDesc,setBeachDesc]=useState(null);const[latt,setLatt]=useState(null);const[lngg,setLngg]=useState(null);const[beachname,setBeachName]=useState('');const onMapLoad=async map=>{// const response = await axios.get('/beach.json'); \nconst baseUrl=process.env.NODE_ENV==='production'?'https://server-dot-turing-diode-439622-f5.wl.r.appspot.com'// GCP URL\n:'http://localhost:3000';// Local URL for development\nconst response=await axios.get(`${baseUrl}/api/get-data`);//https://turing-diode-439622-f5.wl.r.appspot.com\nconst beaches=response.data;const markers=beaches.map(markerData=>{const marker=new window.google.maps.Marker({position:{lat:markerData.lat,lng:markerData.lng},map,title:markerData.info,icon:{url:\"http://maps.google.com/mapfiles/ms/icons/red-dot.png\",scaledSize:new window.google.maps.Size(32,32)}});// Event listener for each marker click\nmarker.addListener('click',async()=>{// Fetch data from the Google Places API\ntry{// Fetch nearby place details using latitude and longitude\nconst nearbySearchResponse=await axios.get(`${baseUrl}/api/beach-info?lat=${markerData.lat}&lng=${markerData.lng}`);const{nearby,details}=nearbySearchResponse.data;setBeachData(nearby);setBeachDesc(details);setLatt(markerData.lat);setLngg(markerData.lng);setBeachName(markerData.wiki);setShowWeather(true);// Show the weather information\n}catch(error){console.error(\"Error fetching beach data:\",error);alert(\"Failed to fetch beach data.\");}});return marker;});// Initialize MarkerClusterer\nnew MarkerClusterer({markers,map});};return/*#__PURE__*/_jsx(\"div\",{className:\"bg-blue-100 min-h-screen p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-2/3 p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-4 rounded-lg shadow-lg mb-6\",children:[/*#__PURE__*/_jsx(BeachInformation,{beachData:beachData,beachdesc:beachDesc}),/*#__PURE__*/_jsx(BeachDescription,{beachName:beachname}),/*#__PURE__*/_jsx(TideInfo,{lat:latt,lon:lngg})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"w-1/3 p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-4 rounded-lg shadow-lg h-full\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold mb-2\",children:\"California Map\"}),/*#__PURE__*/_jsx(LoadScript,{googleMapsApiKey:\"AIzaSyC7iWcY4uYnqSYvzfCvxV4NwJZNsOPJGQk\",children:/*#__PURE__*/_jsx(GoogleMap,{mapContainerStyle:containerStyle,center:center,zoom:9,onLoad:onMapLoad})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(BeachWeather,{showWeather:showWeather,lat:latt,lon:lngg})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(NearbyArticles,{lat:latt,lon:lngg})})]})})]})});};export default BeachInfo;","map":{"version":3,"names":["React","useState","GoogleMap","LoadScript","MarkerClusterer","BeachWeather","BeachInformation","axios","TideInfo","BeachDescription","NearbyArticles","jsx","_jsx","jsxs","_jsxs","require","config","containerStyle","width","height","center","lat","lng","BeachInfo","showWeather","setShowWeather","beachData","setBeachData","beachDesc","setBeachDesc","latt","setLatt","lngg","setLngg","beachname","setBeachName","onMapLoad","map","baseUrl","process","env","NODE_ENV","response","get","beaches","data","markers","markerData","marker","window","google","maps","Marker","position","title","info","icon","url","scaledSize","Size","addListener","nearbySearchResponse","nearby","details","wiki","error","console","alert","className","children","beachdesc","beachName","lon","googleMapsApiKey","mapContainerStyle","zoom","onLoad"],"sources":["/Users/csuftitan/Desktop/Cloud Project/beach-info/src/BeachInfo.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { MarkerClusterer } from '@googlemaps/markerclusterer';\nimport BeachWeather from './BeachWeather';\nimport BeachInformation from './BeachInformation';\nimport axios from 'axios';\nimport TideInfo from './TideInfo';\nimport BeachDescription from './BeachDescription';\nimport NearbyArticles from './NearbyArticles';\nrequire('dotenv').config();\n\n\n\nconst containerStyle = {\n  width: '100%',\n  height: '600px'\n};\n\nconst center = {\n  lat: 34.0522, // Latitude for Los Angeles, California\n  lng: -118.2437 // Longitude for Los Angeles, California\n};\n\n\n\nconst BeachInfo = () => {\n    const [showWeather, setShowWeather] = useState(false);\n    const [beachData, setBeachData] = useState(null);\n    const [beachDesc, setBeachDesc] = useState(null);\n    const [latt,setLatt] = useState(null);\n    const [lngg,setLngg] = useState(null);\n    const [beachname,setBeachName] = useState('');\n  \n    const onMapLoad = async(map) => {\n        // const response = await axios.get('/beach.json'); \n        const baseUrl = process.env.NODE_ENV === 'production' \n          ? 'https://server-dot-turing-diode-439622-f5.wl.r.appspot.com'  // GCP URL\n          : 'http://localhost:3000';  // Local URL for development\n\n        const response = await axios.get(`${baseUrl}/api/get-data`); //https://turing-diode-439622-f5.wl.r.appspot.com\n        const beaches = response.data;\n      const markers = beaches.map((markerData) => {\n        const marker = new window.google.maps.Marker({\n          position: { lat: markerData.lat, lng: markerData.lng },\n          map,\n          title: markerData.info,\n          icon: {\n            url: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\",\n            scaledSize: new window.google.maps.Size(32, 32),\n          },\n        });\n  \n        // Event listener for each marker click\n        marker.addListener('click', async () => {\n  \n          // Fetch data from the Google Places API\n          try {\n            // Fetch nearby place details using latitude and longitude\n            const nearbySearchResponse = await axios.get(\n                `${baseUrl}/api/beach-info?lat=${markerData.lat}&lng=${markerData.lng}`\n              );              \n              const { nearby, details } = nearbySearchResponse.data;\n              setBeachData(nearby);\n              setBeachDesc(details);\n              setLatt(markerData.lat);\n              setLngg(markerData.lng);\n              setBeachName(markerData.wiki);\n              setShowWeather(true); // Show the weather information\n          } catch (error) {\n            console.error(\"Error fetching beach data:\", error);\n            alert(\"Failed to fetch beach data.\");\n          }\n        });\n  \n        return marker;\n      });\n  \n      // Initialize MarkerClusterer\n      new MarkerClusterer({ markers, map });\n    };\n\n  return (\n    <div className=\"bg-blue-100 min-h-screen p-6\">\n\n      <div className=\"flex\">\n        <div className=\"w-2/3 p-4\">\n          <div className=\"bg-white p-4 rounded-lg shadow-lg mb-6\">\n            <BeachInformation beachData={beachData} beachdesc={beachDesc} />\n            <BeachDescription beachName={beachname}/>\n            <TideInfo lat={latt} lon={lngg} />\n          </div>\n        </div>\n\n        <div className=\"w-1/3 p-4\">\n          <div className=\"bg-white p-4 rounded-lg shadow-lg h-full\">\n            <h2 className=\"text-lg font-semibold mb-2\">California Map</h2>\n            <LoadScript\n              googleMapsApiKey=\"AIzaSyC7iWcY4uYnqSYvzfCvxV4NwJZNsOPJGQk\"\n            >\n              <GoogleMap\n                mapContainerStyle={containerStyle}\n                center={center}\n                zoom={9}\n                onLoad={onMapLoad}\n              />\n            </LoadScript>\n            <div>\n            <BeachWeather showWeather={showWeather} lat={latt} lon={lngg} /></div>\n            <div><NearbyArticles lat={latt} lon={lngg}/></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BeachInfo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}