{"ast":null,"code":"var _jsxFileName = \"/Users/csuftitan/Desktop/Cloud Project/beach-info/src/NearbyArticles.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport NearbyPlacesCarousel from './NearbyPlacesCarousel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NearbyArticles = ({\n  lat,\n  lon\n}) => {\n  _s();\n  const [nearbyArticles, setNearbyArticles] = useState([]);\n  const [title, setTitles] = useState([]);\n  useEffect(() => {\n    const fetchNearbyArticles = async () => {\n      if (lat && lon) {\n        try {\n          const response = await axios.get(`https://en.wikipedia.org/w/api.php`, {\n            params: {\n              action: 'query',\n              list: 'geosearch',\n              gscoord: `${lat}|${lon}`,\n              gsradius: 1000,\n              gslimit: 10,\n              format: 'json',\n              origin: '*'\n            }\n          });\n          debugger;\n          setNearbyArticles(response.data.query.geosearch);\n          const fetchedTitles = response.data.query.geosearch.map(article => ({\n            title: article.title\n          }));\n          setTitles(fetchedTitles);\n        } catch (error) {\n          console.error('Error fetching nearby articles:', error);\n        }\n      }\n    };\n    fetchNearbyArticles();\n  }, [lat, lon]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Nearby Places of Interest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-lg font-semibold mb-2\",\n      children: \"Nearby Places of Interest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NearbyPlacesCarousel, {\n      places: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(NearbyArticles, \"5h8qRGTJbBSkMBmoOczXkeBVedc=\");\n_c = NearbyArticles;\nexport default NearbyArticles;\nvar _c;\n$RefreshReg$(_c, \"NearbyArticles\");","map":{"version":3,"names":["React","useState","useEffect","axios","NearbyPlacesCarousel","jsxDEV","_jsxDEV","NearbyArticles","lat","lon","_s","nearbyArticles","setNearbyArticles","title","setTitles","fetchNearbyArticles","response","get","params","action","list","gscoord","gsradius","gslimit","format","origin","data","query","geosearch","fetchedTitles","map","article","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","places","_c","$RefreshReg$"],"sources":["/Users/csuftitan/Desktop/Cloud Project/beach-info/src/NearbyArticles.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport NearbyPlacesCarousel from './NearbyPlacesCarousel';\n\nconst NearbyArticles = ({ lat, lon }) => {\n  const [nearbyArticles, setNearbyArticles] = useState([]);\n  const [title,setTitles] = useState([]);\n\n  useEffect(() => {\n    const fetchNearbyArticles = async () => {\n        if(lat && lon){\n            try {\n                const response = await axios.get(\n                `https://en.wikipedia.org/w/api.php`, {\n                params: {\n                    action: 'query',\n                    list: 'geosearch',\n                    gscoord: `${lat}|${lon}`,\n                    gsradius: 1000,\n                    gslimit: 10,\n                    format: 'json',\n                    origin: '*',\n                },\n                });\n                debugger;\n                setNearbyArticles(response.data.query.geosearch);\n                const fetchedTitles = response.data.query.geosearch.map(article => ({\n                    title: article.title\n                  }));\n                  setTitles(fetchedTitles); \n            } catch (error) {\n                console.error('Error fetching nearby articles:', error);\n            }\n        }\n    };\n\n    fetchNearbyArticles();\n  }, [lat, lon]);\n\n  return (\n    <div>\n      <h3>Nearby Places of Interest</h3>\n      <h2 className=\"text-lg font-semibold mb-2\">Nearby Places of Interest</h2>\n      <NearbyPlacesCarousel places={title} />\n    </div>\n  );\n};\n\nexport default NearbyArticles;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,oBAAoB,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,cAAc,GAAGA,CAAC;EAAEC,GAAG;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACY,KAAK,EAACC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMa,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAGP,GAAG,IAAIC,GAAG,EAAC;QACV,IAAI;UACA,MAAMO,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAChC,oCAAoC,EAAE;YACtCC,MAAM,EAAE;cACJC,MAAM,EAAE,OAAO;cACfC,IAAI,EAAE,WAAW;cACjBC,OAAO,EAAE,GAAGb,GAAG,IAAIC,GAAG,EAAE;cACxBa,QAAQ,EAAE,IAAI;cACdC,OAAO,EAAE,EAAE;cACXC,MAAM,EAAE,MAAM;cACdC,MAAM,EAAE;YACZ;UACA,CAAC,CAAC;UACF;UACAb,iBAAiB,CAACI,QAAQ,CAACU,IAAI,CAACC,KAAK,CAACC,SAAS,CAAC;UAChD,MAAMC,aAAa,GAAGb,QAAQ,CAACU,IAAI,CAACC,KAAK,CAACC,SAAS,CAACE,GAAG,CAACC,OAAO,KAAK;YAChElB,KAAK,EAAEkB,OAAO,CAAClB;UACjB,CAAC,CAAC,CAAC;UACHC,SAAS,CAACe,aAAa,CAAC;QAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QAC3D;MACJ;IACJ,CAAC;IAEDjB,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACP,GAAG,EAAEC,GAAG,CAAC,CAAC;EAEd,oBACEH,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClChC,OAAA;MAAIiC,SAAS,EAAC,4BAA4B;MAAAL,QAAA,EAAC;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzEhC,OAAA,CAACF,oBAAoB;MAACoC,MAAM,EAAE3B;IAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA1CIH,cAAc;AAAAkC,EAAA,GAAdlC,cAAc;AA4CpB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}