{"ast":null,"code":"var _jsxFileName = \"/Users/csuftitan/Desktop/Cloud Project/beach-info/src/TideInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport './chartSetup'; // Ensure the components are registered once\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TideInfo = ({\n  lat,\n  lon\n}) => {\n  _s();\n  const [tideData, setTideData] = useState([]);\n  const [chartKey, setChartKey] = useState(0); // Key to force re-rendering\n\n  useEffect(() => {\n    const fetchTideData = async () => {\n      try {\n        const response = await axios.get('./tideData.json');\n        const beaches = response.data;\n        const beachData = beaches.find(beach => beach.lat === parseFloat(lat));\n        if (beachData && beachData.data && beachData.data.heights) {\n          setTideData(beachData.data.heights);\n          setChartKey(prevKey => prevKey + 1);\n        } else {\n          console.warn('No data found for the provided latitude.');\n        }\n      } catch (error) {\n        console.error('Error fetching tide information:', error);\n      }\n    };\n    fetchTideData();\n  }, [lat, lon]);\n  const formatDataForGraph = () => {\n    const labels = tideData.map(data => {\n      const date = new Date(data.dt * 1000);\n      return date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    });\n    const heights = tideData.map(data => data.height);\n    return {\n      labels,\n      datasets: [{\n        label: 'Tide Height (ft)',\n        data: heights,\n        borderColor: '#4A90E2',\n        backgroundColor: 'rgba(74, 144, 226, 0.3)',\n        fill: true,\n        tension: 0.4\n      }]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tide-info bg-gradient-to-r from-blue-300 to-blue-500 p-6 rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-white\",\n      children: \"Tide Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), tideData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: formatDataForGraph()\n      }, chartKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), tideData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded-lg shadow-md\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full bg-white rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-blue-500 text-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4 text-left\",\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4 text-left\",\n              children: \"Height (ft)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tideData.map((tide, index) => {\n            const time = new Date(tide.dt * 1000).toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            });\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"border-b\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4\",\n                children: time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4\",\n                children: tide.height.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(TideInfo, \"yNImuy3brJi7NdANbQqBMp+eAV8=\");\n_c = TideInfo;\nexport default TideInfo;\nvar _c;\n$RefreshReg$(_c, \"TideInfo\");","map":{"version":3,"names":["React","useState","useEffect","axios","Line","jsxDEV","_jsxDEV","TideInfo","lat","lon","_s","tideData","setTideData","chartKey","setChartKey","fetchTideData","response","get","beaches","data","beachData","find","beach","parseFloat","heights","prevKey","console","warn","error","formatDataForGraph","labels","map","date","Date","dt","toLocaleTimeString","hour","minute","height","datasets","label","borderColor","backgroundColor","fill","tension","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","tide","index","time","toFixed","_c","$RefreshReg$"],"sources":["/Users/csuftitan/Desktop/Cloud Project/beach-info/src/TideInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport './chartSetup'; // Ensure the components are registered once\n\nconst TideInfo = ({ lat, lon }) => {\n  const [tideData, setTideData] = useState([]);\n  const [chartKey, setChartKey] = useState(0); // Key to force re-rendering\n\n  useEffect(() => {\n    const fetchTideData = async () => {\n      try {\n        const response = await axios.get('./tideData.json'); \n        const beaches = response.data;\n\n        const beachData = beaches.find(beach => beach.lat === parseFloat(lat));\n        if (beachData && beachData.data && beachData.data.heights) {\n          setTideData(beachData.data.heights);\n          setChartKey((prevKey) => prevKey + 1);\n        } else {\n          console.warn('No data found for the provided latitude.');\n        }\n      } catch (error) {\n        console.error('Error fetching tide information:', error);\n      }\n    };\n\n    fetchTideData();\n  }, [lat, lon]);\n\n  const formatDataForGraph = () => {\n    const labels = tideData.map((data) => {\n      const date = new Date(data.dt * 1000);\n      return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    });\n\n    const heights = tideData.map((data) => data.height);\n\n    return {\n      labels,\n      datasets: [\n        {\n          label: 'Tide Height (ft)',\n          data: heights,\n          borderColor: '#4A90E2',\n          backgroundColor: 'rgba(74, 144, 226, 0.3)',\n          fill: true,\n          tension: 0.4,\n        },\n      ],\n    };\n  };\n\n  return (\n    <div className=\"tide-info bg-gradient-to-r from-blue-300 to-blue-500 p-6 rounded-lg shadow-lg\">\n      <h2 className=\"text-3xl font-bold mb-6 text-white\">Tide Information</h2>\n\n      {tideData.length > 0 && (\n        <div className=\"mb-6\">\n          <Line key={chartKey} data={formatDataForGraph()} />\n        </div>\n      )}\n\n      {tideData.length > 0 && (\n        <div className=\"bg-white p-4 rounded-lg shadow-md\">\n          <table className=\"min-w-full bg-white rounded-lg shadow-md\">\n            <thead>\n              <tr className=\"bg-blue-500 text-white\">\n                <th className=\"py-2 px-4 text-left\">Time</th>\n                <th className=\"py-2 px-4 text-left\">Height (ft)</th>\n              </tr>\n            </thead>\n            <tbody>\n              {tideData.map((tide, index) => {\n                const time = new Date(tide.dt * 1000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n                return (\n                  <tr key={index} className=\"border-b\">\n                    <td className=\"py-2 px-4\">{time}</td>\n                    <td className=\"py-2 px-4\">{tide.height.toFixed(2)}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TideInfo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}