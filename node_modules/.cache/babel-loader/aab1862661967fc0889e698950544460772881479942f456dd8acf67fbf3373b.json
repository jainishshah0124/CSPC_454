{"ast":null,"code":"'use strict';\n\nconst EventEmitter = require('events').EventEmitter;\nconst makeDoneCb = require('./make_done_cb.js');\nconst PromisePoolConnection = require('./pool_connection.js');\nconst inheritEvents = require('./inherit_events.js');\nconst BasePool = require('../base/pool.js');\nclass PromisePool extends EventEmitter {\n  constructor(pool, thePromise) {\n    super();\n    this.pool = pool;\n    this.Promise = thePromise || Promise;\n    inheritEvents(pool, this, ['acquire', 'connection', 'enqueue', 'release']);\n  }\n  getConnection() {\n    const corePool = this.pool;\n    return new this.Promise((resolve, reject) => {\n      corePool.getConnection((err, coreConnection) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(new PromisePoolConnection(coreConnection, this.Promise));\n        }\n      });\n    });\n  }\n  releaseConnection(connection) {\n    if (connection instanceof PromisePoolConnection) connection.release();\n  }\n  query(sql, args) {\n    const corePool = this.pool;\n    const localErr = new Error();\n    if (typeof args === 'function') {\n      throw new Error('Callback function is not available with promise clients.');\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (args !== undefined) {\n        corePool.query(sql, args, done);\n      } else {\n        corePool.query(sql, done);\n      }\n    });\n  }\n  execute(sql, args) {\n    const corePool = this.pool;\n    const localErr = new Error();\n    if (typeof args === 'function') {\n      throw new Error('Callback function is not available with promise clients.');\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (args) {\n        corePool.execute(sql, args, done);\n      } else {\n        corePool.execute(sql, done);\n      }\n    });\n  }\n  end() {\n    const corePool = this.pool;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      corePool.end(err => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n}\n(function (functionsToWrap) {\n  for (let i = 0; functionsToWrap && i < functionsToWrap.length; i++) {\n    const func = functionsToWrap[i];\n    if (typeof BasePool.prototype[func] === 'function' && PromisePool.prototype[func] === undefined) {\n      PromisePool.prototype[func] = function factory(funcName) {\n        return function () {\n          return BasePool.prototype[funcName].apply(this.pool, arguments);\n        };\n      }(func);\n    }\n  }\n})([\n// synchronous functions\n'escape', 'escapeId', 'format']);\nmodule.exports = PromisePool;","map":{"version":3,"names":["EventEmitter","require","makeDoneCb","PromisePoolConnection","inheritEvents","BasePool","PromisePool","constructor","pool","thePromise","Promise","getConnection","corePool","resolve","reject","err","coreConnection","releaseConnection","connection","release","query","sql","args","localErr","Error","done","undefined","execute","end","message","code","errno","sqlState","sqlMessage","functionsToWrap","i","length","func","prototype","factory","funcName","apply","arguments","module","exports"],"sources":["/Users/csuftitan/Desktop/Cloud Project/beach-info/node_modules/mysql2/lib/promise/pool.js"],"sourcesContent":["'use strict';\n\nconst EventEmitter = require('events').EventEmitter;\nconst makeDoneCb = require('./make_done_cb.js');\nconst PromisePoolConnection = require('./pool_connection.js');\nconst inheritEvents = require('./inherit_events.js');\nconst BasePool = require('../base/pool.js');\n\nclass PromisePool extends EventEmitter {\n  constructor(pool, thePromise) {\n    super();\n    this.pool = pool;\n    this.Promise = thePromise || Promise;\n    inheritEvents(pool, this, ['acquire', 'connection', 'enqueue', 'release']);\n  }\n\n  getConnection() {\n    const corePool = this.pool;\n    return new this.Promise((resolve, reject) => {\n      corePool.getConnection((err, coreConnection) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(new PromisePoolConnection(coreConnection, this.Promise));\n        }\n      });\n    });\n  }\n\n  releaseConnection(connection) {\n    if (connection instanceof PromisePoolConnection) connection.release();\n  }\n\n  query(sql, args) {\n    const corePool = this.pool;\n    const localErr = new Error();\n    if (typeof args === 'function') {\n      throw new Error(\n        'Callback function is not available with promise clients.',\n      );\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (args !== undefined) {\n        corePool.query(sql, args, done);\n      } else {\n        corePool.query(sql, done);\n      }\n    });\n  }\n\n  execute(sql, args) {\n    const corePool = this.pool;\n    const localErr = new Error();\n    if (typeof args === 'function') {\n      throw new Error(\n        'Callback function is not available with promise clients.',\n      );\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (args) {\n        corePool.execute(sql, args, done);\n      } else {\n        corePool.execute(sql, done);\n      }\n    });\n  }\n\n  end() {\n    const corePool = this.pool;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      corePool.end((err) => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n}\n\n(function (functionsToWrap) {\n  for (let i = 0; functionsToWrap && i < functionsToWrap.length; i++) {\n    const func = functionsToWrap[i];\n\n    if (\n      typeof BasePool.prototype[func] === 'function' &&\n      PromisePool.prototype[func] === undefined\n    ) {\n      PromisePool.prototype[func] = (function factory(funcName) {\n        return function () {\n          return BasePool.prototype[funcName].apply(this.pool, arguments);\n        };\n      })(func);\n    }\n  }\n})([\n  // synchronous functions\n  'escape',\n  'escapeId',\n  'format',\n]);\n\nmodule.exports = PromisePool;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}